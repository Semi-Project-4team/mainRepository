<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="animal.team.animalhospital.hospital.model.dao.PersonMapper">

    <resultMap id="personResultMap" type="animal.team.animalhospital.hospital.model.dto.PersonDTO">
        <id property="personCode" column="person_code"/>
        <result property="name" column="person_name"/>
        <result property="email" column="person_email"/>
        <result property="password" column="person_password"/>
        <result property="birth" column="person_birth"/>
        <result property="phoneNumber" column="person_phone_number"/>
        <result property="informationCollection" column="person_information_collection"/>
        <result property="isAccountDrawal" column="person_isAccount_drawal"/>
    </resultMap>

    <update id="updatePasswordPerson" parameterType="animal.team.animalhospital.hospital.model.dto.PersonDTO">
        update
            tbl_person
        set
            person_password = #{ password }
        where
            person_email = #{ email };
    </update>

    <select id="findByPersonCode" resultType="int">
        select
            person_code
        from
            tbl_person
        where
            person_email = #{ userEmail }
    </select>

    <select id="findAllPerson" resultMap="personResultMap">
        SELECT
            person_code,
            person_name,
            person_email,
            person_password,
            person_birth,
            person_phone_number,
            person_information_collection
        FROM
            tbl_person
    </select>

    <select id="selectPersonByCode" parameterType="int" resultMap="personResultMap">
        SELECT
            person_code,
            person_name,
            person_email,
            person_password,
            person_birth,
            person_phone_number,
            person_information_collection
        FROM
            tbl_person
        WHERE
            person_code = #{ personCode }
    </select>
    <select id="findByPersonName" resultMap="personResultMap">
        select
            *
        from
            tbl_person
        where
            person_email = #{ personEmail };
    </select>
    <select id="personFindEmail" resultMap="personResultMap">
        select
            person_email
        from
            tbl_person
        where
            person_name = #{ name }
            and person_phone_number = #{ phoneNumber };
    </select>

    <select id="findByPersonEmail" resultType="String">
        select
            person_email
        from
            tbl_person
        where
            person_email = #{ email };
    </select>

    <select id="isPersonSignCheck" resultType="int">
        SELECT
            count(person_email)
        from
            tbl_person
        where
            person_email = #{ email };
    </select>

    <insert id="personRegist" parameterType="animal.team.animalhospital.hospital.model.dto.PersonDTO">
        INSERT INTO
            tbl_person
            (
                person_code,
                person_name,
                person_email,
                person_password,
                person_birth,
                person_phone_number,
                person_information_collection
            )
        values
            (
                null,
                #{ name },
                #{ email },
                #{ password },
                #{ birth },
                #{ phoneNumber },
                #{ informationCollection }
            )
    </insert>

    <insert id="personSignup" parameterType="animal.team.animalhospital.hospital.model.dto.PersonDTO">
        INSERT INTO
            tbl_person
            (
                person_code,
                person_name,
                person_email,
                person_password,
                person_birth,
                person_phone_number,
                person_information_collection,
                person_isAccount_drawal
            )
        values
            (
                null,
                #{ name },
                #{ email },
                #{ password },
                #{ birth },
                #{ phoneNumber },
                #{ informationCollection },
                'Y'
            )
    </insert>
</mapper>